{"version":3,"sources":["shop/ProductPageConnector.js","data/Types.js","data/DataStore.js","data/CommonReducer.js","data/ShopReducer.js","data/CartReducer.js","data/AsnycMiddleware.js","data/Urls.js","data/ActionCreators.js","data/RestDataSource.js","ToggleLink.js","shop/CategoryNavigation.js","shop/ProductList.js","shop/CartSummary.js","PaginationButtons.js","PaginationControls.js","shop/Shop.js","data/CartActionCreators.js","shop/CartDetailsRows.js","shop/CartDetails.js","data/DataGetter.js","forms/ValidationError.js","forms/ValidatedForm.js","forms/ValidationMessages.js","shop/Checkout.js","shop/Thanks.js","shop/ShopConnector.js","App.js","serviceWorker.js","index.js"],"names":["PageComponent","DataTypes","ActionTypes","CFCommerceDataStore","createStore","reducers","storeData","action","i","length","newStore","CommonReducer","type","payload","dataType","data","total","params","pageSize","sortKey","order","cart","cartItems","cartPrice","p","product","q","quantity","existing","find","item","id","price","map","diff","selection","filter","applyMiddleware","next","then","result","RestUrls","dataSource","err_handler","GetData","a","SendRequest","StoreData","method","url","Axios","request","this","error_hanlder","loadData","response","Number","headers","setPageSize","newSize","setSortProperty","newProp","placeOrder","ToggleLink","Route","path","props","to","exact","children","routeProps","baseClasses","className","activeClass","inActiveClass","combineClasses","match","Link","Component","CategoryNavigation","Fragment","baseUrl","categories","cat","key","toLowerCase","ProductList","products","name","toFixed","description","onClick","addToCart","CartSummary","getSummary","getLinkClasses","mapStateToProps","dataStore","mapDispatchToProps","mergeProps","actionCreators","router","currentPage","page","pageCount","Math","ceil","products_total","navigateToPage","history","push","category","PaginationButtons","getPageNumbers","Array","keys","slice","reverse","v","current","navigate","disabled","num","PaginationControls","handlePageSizeChange","ev","target","value","handleSortPropertyChange","pageSizes","sizes","sortKeys","onChange","s","k","ProductPages","withRouter","connect","Shop","handleAddToCart","updateCartQuantity","removeFromCart","clearCart","CartDetailsRows","handleChange","event","updateQuantity","colSpan","CartDetails","DataGetter","componentDidUpate","getData","componentDidMount","dsData","products_params","rtData","_limit","_sort","_page","category_like","Object","ValidationError","errors","err","ValidatedForm","handleSubmit","setState","state","newState","validationErrors","values","formElements","forEach","elem","checkValidity","messages","validity","valueMissing","typeMismatch","GetMessages","assign","entries","e","submitCallback","registerRef","element","renderElement","modelItem","label","ref","defaultAttrs","attrs","formModel","m","cancelCallback","cancelText","submitText","Checkout","formData","quanity","product_id","handleCancel","required","fromModel","Thanks","ShopActions","CartActions","ShopConnector","ds","selectComponent","wrap","Content","section","Redirect","Switch","from","render","App","store","component","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b93d2619.chunk.js","sourcesContent":["import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { setPageSize, setSortProperty } from '../data/ActionCreators';\nconst mapStateToProps = (dataStore) => dataStore;\nconst mapDispatchToProps = { setPageSize, setSortProperty };\nconst mergeProps = (dataStore, actionCreators, router) => ({\n  ...dataStore,\n  ...router,\n  ...actionCreators,\n  currentPage: Number(router.match.params.page),\n  pageCount: Math.ceil(\n    (dataStore.products_total | dataStore.pageSize || 5) /\n      (dataStore.pageSize || 5)\n  ),\n  navigateToPage: (page) =>\n    router.history.push(\n      `/shop/products/${router.match.params.category}/${page}`\n    ),\n});\n\nexport const ProductPageConnector = (PageComponent) =>\n  withRouter(\n    connect(mapStateToProps, mapDispatchToProps, mergeProps)(PageComponent)\n  );\n","export const DataTypes = {\n  PRODUCTS: 'products',\n  CATEGORIES: 'categories',\n  ORDERS: 'orders'\n};\nexport const ActionTypes = {\n  DATA_LOAD: 'data_load',\n  DATA_STORE: 'data_store',\n  DATA_SET_SORT_PROPERTY: 'data_set_sort',\n  DATA_SET_PAGESIZE: 'data_set_pagesize',\n  CART_ADD: 'cart_add',\n  CART_UPDATE: 'cart_update',\n  CART_REMOVE: 'cart_delete',\n  CART_CLEAR: 'cart_clear',\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport { ShopReducer } from './ShopReducer';\nimport { CartReducer } from './CartReducer';\nimport { CommonReducer } from './CommonReducer';\nimport { asyncActions } from './AsnycMiddleware';\n\nexport const CFCommerceDataStore = createStore(\n  CommonReducer(ShopReducer, CartReducer),\n  applyMiddleware(asyncActions)\n);\n","export const CommonReducer = (...reducers) => (storeData, action) => {\n  for (let i = 0; i < reducers.length; i++) {\n    let newStore = reducers[i](storeData, action);\n    if (newStore !== storeData) {\n      return newStore;\n    }\n  }\n  return storeData;\n};\n","import { ActionTypes, DataTypes } from './Types';\n\nexport const ShopReducer = (storeData, action) => {\n  switch (action.type) {\n    case ActionTypes.DATA_LOAD:\n      return {\n        ...storeData,\n        [action.payload.dataType]: action.payload.data,\n        [`${action.payload.dataType}_total`]: action.payload.total,\n        [`${action.payload.dataType}_params`]: action.payload.params,\n      };\n    case ActionTypes.DATA_SET_PAGESIZE:\n      return { ...storeData, pageSize: action.payload };\n    case ActionTypes.DATA_SET_SORT_PROPERTY:\n      return { ...storeData, sortKey: action.payload };\n    case ActionTypes.DATA_STORE:\n      if (action.payload.dataType === DataTypes.ORDERS) {\n        return { ...storeData, order: action.payload.data };\n      }\n      break;\n    default:\n      return storeData || {};\n  }\n};\n","import { ActionTypes } from './Types';\n\nexport const CartReducer = (storeData, action) => {\n  let newStore = { cart: [], cartItems: 0, cartPrice: 0, ...storeData };\n  switch (action.type) {\n    case ActionTypes.CART_ADD:\n      const p = action.payload.product;\n      const q = action.payload.quantity;\n\n      let existing = newStore.cart.find((item) => item.product.id === p.id);\n      if (existing) {\n        existing.quantity += q;\n      } else {\n        newStore.cart = [...newStore.cart, action.payload];\n      }\n      newStore.cartItems += q;\n      newStore.cartPrice += p.price * q;\n      return newStore;\n\n    case ActionTypes.CART_UPDATE:\n      newStore.cart = newStore.cart.map((item) => {\n        if (item.product.id === action.payload.product.id) {\n          const diff = action.payload.quantity - item.quantity;\n          newStore.cartItems += diff;\n          newStore.cartPrice += item.product.price * diff;\n          return action.payload;\n        } else {\n          return item;\n        }\n      });\n      return newStore;\n\n    case ActionTypes.CART_REMOVE:\n      let selection = newStore.cart.find(\n        (item) => item.product.id === action.payload.id\n      );\n      newStore.cartItems -= selection.quantity;\n      newStore.cartPrice -= selection.quantity * selection.product.price;\n      newStore.cart = newStore.cart.filter((item) => item !== selection);\n      return newStore;\n\n    case ActionTypes.CART_CLEAR:\n      return { ...storeData, cart: [], cartItems: 0, cartPrice: 0 };\n\n    default:\n      return storeData || {};\n  }\n};\n","const isPromise = (payload) =>\n  (typeof payload === 'object' || typeof payload === 'function') &&\n  typeof payload.then === 'function';\n\nexport const asyncActions = () => (next) => (action) => {\n  if (isPromise(action.payload)) {\n    action.payload.then((result) => next({ ...action, payload: result }));\n  } else {\n    next(action);\n  }\n};\n","import { DataTypes } from './Types';\n\nconst protocol = 'http';\nconst hostname = 'localhost';\nconst port = 3500;\n\nexport const RestUrls = {\n  [DataTypes.PRODUCTS]: `${protocol}://${hostname}:${port}/api/products`,\n  [DataTypes.CATEGORIES]: `${protocol}://${hostname}:${port}/api/categories`,\n  [DataTypes.ORDERS]: `${protocol}://${hostname}:${port}/api/orders`,\n};\n","import { ActionTypes, DataTypes } from './Types';\n// import { data as phData } from './placeholderData';\nimport { RestDataSource } from './RestDataSource';\n\nconst dataSource = new RestDataSource();\n\nexport const loadData = (dataType, params) => ({\n  type: ActionTypes.DATA_LOAD,\n  payload: dataSource.GetData(dataType, params).then((response) => ({\n    dataType,\n    data: response.data,\n    total: Number(response.headers['x-total-count']),\n    params,\n  })),\n});\n\nexport const setPageSize = (newSize) => ({\n  type: ActionTypes.DATA_SET_PAGESIZE,\n  payload: newSize,\n});\n\nexport const setSortProperty = (newProp) => ({\n  type: ActionTypes.DATA_SET_SORT_PROPERTY,\n  payload: newProp,\n});\n\nexport const placeOrder = (order) => ({\n  type: ActionTypes.DATA_STORE,\n  payload: dataSource.StoreData(DataTypes.ORDERS, order).then((response) => ({\n    dataType: DataTypes.ORDERS,\n    data: response.data,\n  })),\n});\n","import Axios from 'axios';\nimport { RestUrls } from './Urls';\n\nexport class RestDataSource {\n  constructor(err_handler) {\n    this.error_hanlder = err_handler || (() => {});\n  }\n\n  GetData = async (dataType, params) =>\n    this.SendRequest('get', RestUrls[dataType], params);\n\n  StoreData = (dataType, data) =>\n    this.SendRequest('post', RestUrls[dataType], {}, data);\n\n  SendRequest = (method, url, params, data) =>\n    Axios.request({\n      method,\n      url,\n      params,\n      data\n    });\n}\n","import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\n\nexport class ToggleLink extends Component {\n  render() {\n    return (\n      <Route\n        path={this.props.to}\n        exact={this.props.exact}\n        children={(routeProps) => {\n          const baseClasses = this.props.className || 'm-2 btn btn-block';\n          const activeClass = this.props.activeClass || 'btn-primary';\n          const inActiveClass = this.props.inActiveClass || 'btn-secondary';\n\n          const combineClasses = `${baseClasses} ${\n            routeProps.match ? activeClass : inActiveClass\n          }`;\n          return (\n            <Link to={this.props.to} className={combineClasses}>\n              {this.props.children}\n            </Link>\n          );\n        }}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\n//import { Link } from \"react-router-dom\";\nimport { ToggleLink } from '../ToggleLink';\n\nexport class CategoryNavigation extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <ToggleLink to={`${this.props.baseUrl}/all`} exact={false}>\n          All\n        </ToggleLink>\n        {this.props.categories &&\n          this.props.categories.map((cat) => (\n            <ToggleLink\n              key={cat}\n              to={`${this.props.baseUrl}/${cat.toLowerCase()}`}\n            >\n              {cat}\n            </ToggleLink>\n          ))}\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport class ProductList extends Component {\n  render() {\n    if (this.props.products == null || this.props.products.length === 0) {\n      return <h5 className='p-2'>No Products</h5>;\n    }\n    return this.props.products.map((p) => (\n      <div className='card m-1 p-1 bg-light' key={p.id}>\n        <h4>\n          {p.name}\n          <span className='badge badge-pill badge-primary float-right'>\n            ${p.price.toFixed(2)}\n          </span>\n        </h4>\n        <div className='card-text bg-white p-1'>\n          {p.description}\n          <button\n            className='btn btn-success btn-sm float-right'\n            onClick={() => this.props.addToCart(p)}\n          >\n            Add To Cart\n          </button>\n        </div>\n      </div>\n    ));\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class CartSummary extends Component {\n  getSummary = () => {\n    if (this.props.cartItems > 0) {\n      return (\n        <span>\n          {this.props.cartItems} item(s), ${this.props.cartPrice.toFixed(2)}\n        </span>\n      );\n    } else {\n      return <span>Your cart: (empty) </span>;\n    }\n  };\n\n  getLinkClasses = () => {\n    return `btn btn-sm bg-dark text-white\n            ${this.props.cartItems === 0 ? 'disabled' : ''}`;\n  };\n\n  render() {\n    return (\n      <div className='float-right'>\n        <small>\n          {this.getSummary()}\n          <Link className={this.getLinkClasses()} to='/shop/cart'>\n            <i className='fa fa-shopping-cart'></i>\n          </Link>\n        </small>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport class PaginationButtons extends Component {\n  getPageNumbers = () => {\n    if (this.props.pageCount < 4) {\n      return [...Array(this.props.pageCount + 1).keys()].slice(1);\n    } else if (this.props.currentPage <= 4) {\n      return [1, 2, 3, 4, 5];\n    } else if (this.props.currentPage > this.props.pageCount - 4) {\n      return [...Array(5).keys()]\n        .reverse()\n        .map((v) => this.props.pageCount - v);\n    } else {\n      return [\n        this.props.currentPage - 1,\n        this.props.currentPage,\n        this.props.currentPage + 1,\n      ];\n    }\n  };\n  render() {\n    const current = this.props.currentPage;\n    const pageCount = this.props.pageCount;\n    const navigate = this.props.navigate;\n    return (\n      <React.Fragment>\n        <button\n          onClick={() => navigate(current - 1)}\n          disabled={current === 1}\n          className='btn btn-secondary mx-1'\n        >\n          Previous\n        </button>\n        {current > 4 && (\n          <React.Fragment>\n            <button\n              className='btn btn-secondary mx-1'\n              onClick={() => navigate(1)}\n            >\n              1\n            </button>\n            <span className='h4'>...</span>\n          </React.Fragment>\n        )}\n        {this.getPageNumbers().map((num) => (\n          <button\n            className={`btn mx-1 ${\n              num === current ? 'btn-primary' : 'btn-secondary'\n            }`}\n            onClick={() => navigate(num)}\n            key={num}\n          >\n            {num}\n          </button>\n        ))}\n        {current <= pageCount - 4 && (\n          <React.Fragment>\n            <span className='h4'>...</span>\n            <button\n              className='btn btn-secondary mx-1'\n              onClick={() => navigate(pageCount)}\n            >\n              {pageCount}\n            </button>\n          </React.Fragment>\n        )}\n        <button\n          onClick={() => navigate(current + 1)}\n          disabled={current === pageCount}\n          className='btn btn-secondary mx-1'\n        >\n          Next\n        </button>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { PaginationButtons } from './PaginationButtons';\nexport class PaginationControls extends Component {\n  constructor(props) {\n    super(props);\n    this.pageSizes = this.props.sizes || [5, 10, 25, 100];\n    this.sortKeys = this.props.keys || ['Name', 'Price'];\n  }\n  handlePageSizeChange = (ev) => {\n    this.props.setPageSize(ev.target.value);\n  };\n  handleSortPropertyChange = (ev) => {\n    this.props.setSortProperty(ev.target.value);\n  };\n  render() {\n    return (\n      <div className='m-2'>\n        <div className='text-center m-1'>\n          <PaginationButtons\n            currentPage={this.props.currentPage}\n            pageCount={this.props.pageCount}\n            navigate={this.props.navigateToPage}\n          />\n        </div>\n        <div className='form-inline justify-content-center'>\n          <select\n            className='form-control'\n            onChange={this.handlePageSizeChange}\n            value={this.props.pageSize || this.pageSizes[0]}\n          >\n            {this.pageSizes.map((s) => (\n              <option value={s} key={s}>\n                {s} per page\n              </option>\n            ))}\n          </select>\n          <select\n            className='form-control'\n            onChange={this.handleSortPropertyChange}\n            value={this.props.sortKey || this.sortKeys[0]}\n          >\n            {this.sortKeys.map((k) => (\n              <option value={k.toLowerCase()} key={k}>\n                Sort By {k}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { CategoryNavigation } from './CategoryNavigation';\nimport { ProductList } from './ProductList';\nimport { CartSummary } from './CartSummary';\nimport { ProductPageConnector } from \"./ProductPageConnector\";\nimport { PaginationControls } from \"../PaginationControls\";\n\nconst ProductPages = ProductPageConnector(PaginationControls);\n\nexport class Shop extends Component {\n  handleAddToCart = (...args) => {\n    this.props.addToCart(...args);\n    this.props.history.push('/shop/cart');\n  };\n\n  render() {\n    return (\n      <div className='container-fluid'>\n        <div className='row'>\n          <div className='col bg-dark text-white'>\n            <div className='navbar-brand'>CFCommerce</div>\n            <CartSummary {...this.props} />\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-3 p-2'>\n            <CategoryNavigation\n              baseUrl='/shop/products'\n              categories={this.props.categories}\n            />\n          </div>\n          <div className='col-9 p-2'>\n            <ProductPages />\n            <ProductList\n              products={this.props.products}\n              addToCart={this.handleAddToCart}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { ActionTypes } from './Types';\n\nexport const addToCart = (product, quantity) => ({\n  type: ActionTypes.CART_ADD,\n  payload: {\n    product,\n    quantity: quantity || 1,\n  },\n});\n\nexport const updateCartQuantity = (product, quantity) => ({\n  type: ActionTypes.CART_UPDATE,\n  payload: { product, quantity },\n});\n\nexport const removeFromCart = (product) => ({\n  type: ActionTypes.CART_REMOVE,\n  payload: product,\n});\n\nexport const clearCart = () => ({\n  type: ActionTypes.CART_CLEAR,\n});\n","import React, { Component } from 'react';\n\nexport class CartDetailsRows extends Component {\n  handleChange = (product, event) => {\n    this.props.updateQuantity(product, event.target.value);\n  };\n\n  render() {\n    if (!this.props.cart || this.props.cart.length === 0) {\n      return (\n        <tr>\n          <td colSpan='5'>Your cart is empty</td>\n        </tr>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          {this.props.cart.map((item) => (\n            <tr key={item.product.id}>\n              <td>\n                <input\n                  type='number'\n                  value={item.quantity}\n                  onChange={(ev) => this.handleChange(item.product, ev)}\n                />\n              </td>\n              <td>{item.product.name}</td>\n              <td>${item.product.price.toFixed(2)}</td>\n              <td>${(item.quantity * item.product.price).toFixed(2)}</td>\n              <td>\n                <button\n                  className='btn btn-sm btn-danger'\n                  onClick={() => this.props.removeFromCart(item.product)}\n                >\n                  Remove\n                </button>\n              </td>\n            </tr>\n          ))}\n          <tr>\n            <th colSpan='3' className='text-right'>\n              Total:\n            </th>\n            <th colSpan='2'>${this.props.cartPrice.toFixed(2)}</th>\n          </tr>\n        </React.Fragment>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CartDetailsRows } from './CartDetailsRows';\n\nexport class CartDetails extends Component {\n  getLinkClasses = () => `btn btn-secondary m-1\n        ${this.props.cartItems === 0 ? 'disabled' : ''}`;\n\n  render() {\n    return (\n      <div className='m-3'>\n        <h2 className='text-center'>Your Cart</h2>\n        <table className='table table-bordered table-striped'>\n          <thead>\n            <tr>\n              <th>Quantity</th>\n              <th>Product</th>\n              <th className='text-right'>Price</th>\n              <th className='text-right'>Subtotal</th>\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            <CartDetailsRows\n              cart={this.props.cart}\n              cartPrice={this.props.cartPrice}\n              updateQuantity={this.props.updateCartQuantity}\n              removeFromCart={this.props.removeFromCart}\n            />\n          </tbody>\n        </table>\n        <div className='text-center'>\n          <Link className='btn btn-primary m-1' to='/shop'>\n            Continue Shopping\n          </Link>\n          <Link className={this.getLinkClasses()} to='/shop/checkout'>\n            Checkout\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { DataTypes } from '../data/Types';\n\nexport class DataGetter extends Component {\n  componentDidUpate = () => this.getData();\n\n  componentDidMount = () => this.getData();\n\n  getData = () => {\n    const dsData = this.props.products_params || {};\n    const rtData = {\n      _limit: this.props.pageSize || 5,\n      _sort: this.props.sortKey || 'name',\n      _page: this.props.match.params.page || 1,\n      category_like:\n        (this.props.match.params.category || '') === 'all'\n          ? ''\n          : this.props.match.params.category,\n    };\n    if (Object.keys(rtData).find((key) => dsData[key] !== rtData[key])) {\n      this.props.loadData(DataTypes.PRODUCTS, rtData);\n    }\n  };\n\n  render() {\n    return <React.Fragment>{this.props.children}</React.Fragment>;\n  }\n}\n","import React, { Component } from 'react';\nexport class ValidationError extends Component {\n  render() {\n    if (this.props.errors) {\n      return this.props.errors.map((err) => (\n        <h6 className='text-danger' key={err}>\n          {err}\n        </h6>\n      ));\n    }\n    return null;\n  }\n}\n","import React, { Component } from 'react';\nimport { ValidationError } from './ValidationError';\nimport { GetMessages } from './ValidationMessages';\nexport class ValidatedForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validationErrors: {},\n    };\n    this.formElements = {};\n  }\n\n  handleSubmit = () => {\n    this.setState(\n      (state) => {\n        const newState = { ...state, validationErrors: {} };\n        Object.values(this.formElements).forEach((elem) => {\n          if (!elem.checkValidity()) {\n            newState.validationErrors[elem.name] = GetMessages(elem);\n          }\n        });\n        return newState;\n      },\n      () => {\n        if (Object.keys(this.state.validationErrors).length === 0) {\n          const data = Object.assign(\n            ...Object.entries(this.formElements).map((e) => ({\n              [e[0]]: e[1].value,\n            }))\n          );\n          this.props.submitCallback(data);\n        }\n      }\n    );\n  };\n\n  registerRef = (element) => {\n    if (element !== null) {\n      this.formElements[element.name] = element;\n    }\n  };\n\n  renderElement = (modelItem) => {\n    const name = modelItem.name || modelItem.label.toLowerCase();\n    return (\n      <div className='form-group' key={modelItem.label}>\n        <label>{modelItem.label}</label>\n        <ValidationError errors={this.state.validationErrors[name]} />\n        <input\n          className='form-control'\n          name={name}\n          ref={this.registerRef}\n          {...this.props.defaultAttrs}\n          {...modelItem.attrs}\n        />\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.formModel.map((m) => this.renderElement(m))}\n        <div className='text-center'>\n          <button\n            className='btn btn-secondary m-1'\n            onClick={this.props.cancelCallback}\n          >\n            {this.props.cancelText || 'Cancel'}\n          </button>\n          <button className='btn btn-primary m-1' onClick={this.handleSubmit}>\n            {this.props.submitText || 'Submit'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","export const GetMessages = (elem) => {\n  const messages = [];\n  if (elem.validity.valueMissing) {\n    messages.push('Value required');\n  }\n  if (elem.validity.typeMismatch) {\n    messages.push(`Invalid ${elem.type}`);\n  }\n  return messages;\n};\n","import React, { Component } from 'react';\nimport { ValidatedForm } from '../forms/ValidatedForm';\n\nexport class Checkout extends Component {\n  constructor(props) {\n    super(props);\n    this.defaultAttrs = { type: 'text', required: true };\n    this.formModel = [\n      { label: 'Name' },\n      { label: 'Email', attrs: { type: 'email' } },\n      { label: 'Address' },\n      { label: 'City' },\n      { label: 'Zip/Postal Code', name: 'zip' },\n      { label: 'Country' },\n    ];\n  }\n\n  handleSubmit = (formData) => {\n    const order = {\n      ...formData,\n      products: this.props.cart.map((item) => ({\n        quanity: item.quanity,\n        product_id: item.product.id,\n      })),\n    };\n    this.props.placeOrder(order);\n    this.props.clearCart();\n    this.props.history.push('/shop/thanks');\n  };\n\n  handleCancel = () => {\n    this.props.history.push('/shop/cart');\n  };\n  render() {\n    return (\n      <div className='container-fluid'>\n        <div className='row'>\n          <div className='col bg-dark text-white'>\n            <div className='navbar-brand'>CFCommerce</div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col m-2'>\n            <ValidatedForm\n              fromModel={this.formModel}\n              defaultAttrs={this.defaultAttrs}\n              submitCallback={this.handleSubmit}\n              cancelCallback={this.handleCancel}\n              submitText='Place Order'\n              cancelText='Return to Cart'\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class Thanks extends Component {\n  render() {\n    return (\n      <div>\n        <div className='col bg-dark text-white'>\n          <div className='navbar-brand'>CFCommerce</div>\n        </div>\n        <div className='m-2 text-center'>\n          <h2>Thanks!</h2>\n          <p>Thanks for placing you order.</p>\n          <p>Your order is #{this.props.order ? this.props.order.id : 0}</p>\n          <p>We'll ship your order as soon as possible.</p>\n          <Link to='/shop' className='btn btn-primary'>\n            Return to Store\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as ShopActions from '../data/ActionCreators';\nimport { DataTypes } from '../data/Types';\nimport { Shop } from '../shop/Shop';\nimport * as CartActions from '../data/CartActionCreators';\nimport { CartDetails } from '../shop/CartDetails';\nimport { DataGetter } from '../data/DataGetter';\nimport { Checkout } from '../shop/Checkout';\nimport { Thanks } from '../shop/Thanks';\nconst mapDispatchToProps = { ...ShopActions, ...CartActions };\nexport const ShopConnector = connect(\n  (ds) => ds,\n  mapDispatchToProps\n)(\n  class extends Component {\n    selectComponent = (routeProps) => {\n      const wrap = (Component, Content) => (\n        <Component {...this.props} {...routeProps}>\n          {Content && wrap(Content)}\n        </Component>\n      );\n      switch (routeProps.match.params.section) {\n        case 'products':\n          return wrap(DataGetter, Shop);\n        case 'cart':\n          return wrap(CartDetails);\n        case 'checkout':\n          return wrap(Checkout);\n        case 'thanks':\n          return wrap(Thanks);\n        default:\n          return <Redirect to='/shop/products/all/1' />;\n      }\n    };\n    render() {\n      return (\n        <Switch>\n          <Redirect\n            from='/shop/products/:category'\n            to='/shop/products/:category/1'\n            exact={true}\n          />\n          <Route\n            path={'/shop/:section?/:category?/:page?'}\n            render={(routeProps) => this.selectComponent(routeProps)}\n          />\n        </Switch>\n      );\n    }\n    componentDidMount = () => this.props.loadData(DataTypes.CATEGORIES);\n  }\n);\n","import React, { Component } from 'react';\nimport { CFCommerceDataStore } from './data/DataStore';\nimport { Provider } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport { ShopConnector } from './shop/ShopConnector';\n\n//TODO: UPDATE CONTEXT API LINK CART SUMMARY/SHOP\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={CFCommerceDataStore}>\n        <Router>\n          <Switch>\n            <Route path='/shop' component={ShopConnector} />\n            <Redirect to='/shop' />\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}