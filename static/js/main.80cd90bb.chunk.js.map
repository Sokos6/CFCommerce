{"version":3,"sources":["data/Types.js","data/DataStore.js","data/CommonReducer.js","data/ShopReducer.js","data/CartReducer.js","data/placeholderData.js","ToggleLink.js","shop/CategoryNavigation.js","shop/ProductList.js","shop/CartSummary.js","shop/Shop.js","shop/CartDetailsRows.js","shop/CartDetails.js","shop/ShopConnector.js","data/ActionCreators.js","data/CartActionCreators.js","App.js","serviceWorker.js","index.js"],"names":["DataTypes","ActionTypes","CFCommerceDataStore","createStore","reducers","storeData","action","i","length","newStore","CommonReducer","type","payload","dataType","data","cart","cartItems","cartPrice","p","product","q","quantity","existing","find","item","id","price","map","diff","selection","filter","categories","products","name","category","description","ToggleLink","Route","path","this","props","to","exact","children","routeProps","baseClasses","className","activeClass","inActiveClass","combineClasses","match","Link","Component","CategoryNavigation","Fragment","baseUrl","cat","key","toLowerCase","ProductList","toFixed","onClick","addToCart","CartSummary","getSummary","getLinkClasses","Shop","handleAddToCart","history","push","CartDetailsRows","handleChange","event","updateQuantity","target","value","onChange","ev","removeFromCart","colSpan","CartDetails","updateCartQuantity","mapDispatchToProps","loadData","phData","clearCart","filterProducts","ShopConnector","connect","dataStore","Switch","render","params","Redirect","App","store","component","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.80cd90bb.chunk.js","sourcesContent":["export const DataTypes = {\n  PRODUCTS: 'products',\n  CATEGORIES: 'categories',\n};\nexport const ActionTypes = {\n  DATA_LOAD: 'data_load',\n  CART_ADD: 'cart_add',\n  CART_UPDATE: 'cart_update',\n  CART_REMOVE: 'cart_delete',\n  CART_CLEAR: 'cart_clear',\n};\n","import { createStore } from 'redux';\nimport { ShopReducer } from './ShopReducer';\nimport { CartReducer } from './CartReducer';\nimport { CommonReducer } from './CommonReducer';\nexport const CFCommerceDataStore = createStore(\n  CommonReducer(ShopReducer, CartReducer)\n);\n","export const CommonReducer = (...reducers) => (storeData, action) => {\n  for (let i = 0; i < reducers.length; i++) {\n    let newStore = reducers[i](storeData, action);\n    if (newStore !== storeData) {\n      return newStore;\n    }\n  }\n  return storeData;\n};\n","import { ActionTypes } from './Types';\n\nexport const ShopReducer = (storeData, action) => {\n  switch (action.type) {\n    case ActionTypes.DATA_LOAD:\n      return {\n        ...storeData,\n        [action.payload.dataType]: action.payload.data,\n      };\n    default:\n      return storeData || {};\n  }\n};\n","import { ActionTypes } from './Types';\n\nexport const CartReducer = (storeData, action) => {\n  let newStore = { cart: [], cartItems: 0, cartPrice: 0, ...storeData };\n  switch (action.type) {\n    case ActionTypes.CART_ADD:\n      const p = action.payload.product;\n      const q = action.payload.quantity;\n\n      let existing = newStore.cart.find((item) => item.product.id === p.id);\n      if (existing) {\n        existing.quantity += q;\n      } else {\n        newStore.cart = [...newStore.cart, action.payload];\n      }\n      newStore.cartItems += q;\n      newStore.cartPrice += p.price * q;\n      return newStore;\n\n    case ActionTypes.CART_UPDATE:\n      newStore.cart = newStore.cart.map((item) => {\n        if (item.product.id === action.payload.product.id) {\n          const diff = action.payload.quantity - item.quantity;\n          newStore.cartItems += diff;\n          newStore.cartPrice += item.product.price * diff;\n          return action.payload;\n        } else {\n          return item;\n        }\n      });\n      return newStore;\n\n    case ActionTypes.CART_REMOVE:\n      let selection = newStore.cart.find(\n        (item) => item.product.id === action.payload.id\n      );\n      newStore.cartItems -= selection.quantity;\n      newStore.cartPrice -= selection.quantity * selection.product.price;\n      newStore.cart = newStore.cart.filter((item) => item !== selection);\n      return newStore;\n\n    case ActionTypes.CART_CLEAR:\n      return { ...storeData, cart: [], cartItems: 0, cartPrice: 0 };\n\n    default:\n      return storeData || {};\n  }\n};\n","export const data = {\n  categories: ['Geek', 'Books', 'Pyrex', 'Disney'],\n  products: [\n    {\n      id: 1,\n      name: 'Optimus Prime',\n      category: 'Geek',\n      description: 'For Cyberton',\n      price: 20,\n    },\n    {\n      id: 2,\n      name: 'Megatron',\n      category: 'Geek',\n      description: 'Destroy Optimus',\n      price: 20,\n    },\n    {\n      id: 3,\n      name: 'It',\n      category: 'Books',\n      description: 'Stephen King Book',\n      price: 5,\n    },\n    {\n      id: 4,\n      name: 'Autumn Harvest',\n      category: 'Pyrex',\n      description: 'Vintage Pyrex',\n      price: 6,\n    },\n    {\n      id: 5,\n      name: 'Friendship',\n      category: 'Pyrex',\n      description: 'One of a kind',\n      price: 7,\n    },\n  ],\n};\n","import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\n\nexport class ToggleLink extends Component {\n  render() {\n    return (\n      <Route\n        path={this.props.to}\n        exact={this.props.exact}\n        children={(routeProps) => {\n          const baseClasses = this.props.className || 'm-2 btn btn-block';\n          const activeClass = this.props.activeClass || 'btn-primary';\n          const inActiveClass = this.props.inActiveClass || 'btn-secondary';\n\n          const combineClasses = `${baseClasses} ${\n            routeProps.match ? activeClass : inActiveClass\n          }`;\n          return (\n            <Link to={this.props.to} className={combineClasses}>\n              {this.props.children}\n            </Link>\n          );\n        }}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\n//import { Link } from \"react-router-dom\";\nimport { ToggleLink } from '../ToggleLink';\n\nexport class CategoryNavigation extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <ToggleLink to={this.props.baseUrl} exact={true}>\n          All\n        </ToggleLink>\n        {this.props.categories &&\n          this.props.categories.map((cat) => (\n            <ToggleLink\n              key={cat}\n              to={`${this.props.baseUrl}/${cat.toLowerCase()}`}\n            >\n              {cat}\n            </ToggleLink>\n          ))}\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport class ProductList extends Component {\n  render() {\n    if (this.props.products == null || this.props.products.length === 0) {\n      return <h5 className='p-2'>No Products</h5>;\n    }\n    return this.props.products.map((p) => (\n      <div className='card m-1 p-1 bg-light' key={p.id}>\n        <h4>\n          {p.name}\n          <span className='badge badge-pill badge-primary float-right'>\n            ${p.price.toFixed(2)}\n          </span>\n        </h4>\n        <div className='card-text bg-white p-1'>\n          {p.description}\n          <button\n            className='btn btn-success btn-sm float-right'\n            onClick={() => this.props.addToCart(p)}\n          >\n            Add To Cart\n          </button>\n        </div>\n      </div>\n    ));\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class CartSummary extends Component {\n  getSummary = () => {\n    if (this.props.cartItems > 0) {\n      return (\n        <span>\n          {this.props.cartItems} item(s), ${this.props.cartPrice.toFixed(2)}\n        </span>\n      );\n    } else {\n      return <span>Your cart: (empty) </span>;\n    }\n  };\n\n  getLinkClasses = () => {\n    return `btn btn-sm bg-dark text-white\n            ${this.props.cartItems === 0 ? 'disabled' : ''}`;\n  };\n\n  render() {\n    return (\n      <div className='float-right'>\n        <small>\n          {this.getSummary()}\n          <Link className={this.getLinkClasses()} to='/shop/cart'>\n            <i className='fa fa-shopping-cart'></i>\n          </Link>\n        </small>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { CategoryNavigation } from './CategoryNavigation';\nimport { ProductList } from './ProductList';\nimport { CartSummary } from './CartSummary';\n\nexport class Shop extends Component {\n  handleAddToCart = (...args) => {\n    this.props.addToCart(...args);\n    this.props.history.push('/shop/cart');\n  };\n\n  render() {\n    return (\n      <div className='container-fluid'>\n        <div className='row'>\n          <div className='col bg-dark text-white'>\n            <div className='navbar-brand'>CFCommerce</div>\n            <CartSummary {...this.props} />\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-3 p-2'>\n            <CategoryNavigation\n              baseUrl='/shop/products'\n              categories={this.props.categories}\n            />\n          </div>\n          <div className='col-9 p-2'>\n            <ProductList\n              products={this.props.products}\n              addToCart={this.handleAddToCart}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport class CartDetailsRows extends Component {\n  handleChange = (product, event) => {\n    this.props.updateQuantity(product, event.target.value);\n  };\n\n  render() {\n    if (!this.props.cart || this.props.cart.length === 0) {\n      return (\n        <tr>\n          <td colSpan='5'>Your cart is empty</td>\n        </tr>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          {this.props.cart.map((item) => (\n            <tr key={item.product.id}>\n              <td>\n                <input\n                  type='number'\n                  value={item.quantity}\n                  onChange={(ev) => this.handleChange(item.product, ev)}\n                />\n              </td>\n              <td>{item.product.name}</td>\n              <td>${item.product.price.toFixed(2)}</td>\n              <td>${(item.quantity * item.product.price).toFixed(2)}</td>\n              <td>\n                <button\n                  className='btn btn-sm btn-danger'\n                  onClick={() => this.props.removeFromCart(item.product)}\n                >\n                  Remove\n                </button>\n              </td>\n            </tr>\n          ))}\n          <tr>\n            <th colSpan='3' className='text-right'>\n              Total:\n            </th>\n            <th colSpan='2'>${this.props.cartPrice.toFixed(2)}</th>\n          </tr>\n        </React.Fragment>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CartDetailsRows } from './CartDetailsRows';\n\nexport class CartDetails extends Component {\n  getLinkClasses = () => `btn btn-secondary m-1\n        ${this.props.cartItems === 0 ? 'disabled' : ''}`;\n\n  render() {\n    return (\n      <div className='m-3'>\n        <h2 className='text-center'>Your Cart</h2>\n        <table className='table table-bordered table-striped'>\n          <thead>\n            <tr>\n              <th>Quantity</th>\n              <th>Product</th>\n              <th className='text-right'>Price</th>\n              <th className='text-right'>Subtotal</th>\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            <CartDetailsRows\n              cart={this.props.cart}\n              cartPrice={this.props.cartPrice}\n              updateQuantity={this.props.updateCartQuantity}\n              removeFromCart={this.props.removeFromCart}\n            />\n          </tbody>\n        </table>\n        <div className='text-center'>\n          <Link className='btn btn-primary m-1' to='/shop'>\n            Continue Shopping\n          </Link>\n          <Link className={this.getLinkClasses()} to='/shop/checkout'>\n            Checkout\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loadData } from '../data/ActionCreators';\nimport { DataTypes } from '../data/Types';\nimport { Shop } from './Shop';\nimport {\n  addToCart,\n  updateCartQuantity,\n  removeFromCart,\n  clearCart,\n} from '../data/CartActionCreators';\nimport { CartDetails } from './CartDetails';\n\nconst mapStateToProps = (dataStore) => ({\n  ...dataStore,\n});\n\nconst mapDispatchToProps = {\n  loadData,\n  addToCart,\n  updateCartQuantity,\n  removeFromCart,\n  clearCart,\n};\n\nconst filterProducts = (products = [], category) =>\n  !category || category === 'All'\n    ? products\n    : products.filter(\n        (p) => p.category.toLowerCase() === category.toLowerCase()\n      );\n\nexport const ShopConnector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(\n  class extends Component {\n    render() {\n      return (\n        <Switch>\n          <Route\n            path='/shop/products/:category?'\n            render={(routeProps) => (\n              <Shop\n                {...this.props}\n                {...routeProps}\n                products={filterProducts(\n                  this.props.products,\n                  routeProps.match.params.category\n                )}\n              />\n            )}\n          />\n          <Route\n            path='/shop/cart'\n            render={(routeProps) => (\n              <CartDetails {...this.props} {...routeProps} />\n            )}\n          />\n          <Redirect to='/shop/products' />\n        </Switch>\n      );\n    }\n\n    componentDidMount() {\n      this.props.loadData(DataTypes.CATEGORIES);\n      this.props.loadData(DataTypes.PRODUCTS);\n    }\n  }\n);\n","import { ActionTypes } from './Types';\nimport { data as phData } from './placeholderData';\n\nexport const loadData = (dataType) => ({\n  type: ActionTypes.DATA_LOAD,\n  payload: {\n    dataType: dataType,\n    data: phData[dataType],\n  },\n});\n","import { ActionTypes } from './Types';\n\nexport const addToCart = (product, quantity) => ({\n  type: ActionTypes.CART_ADD,\n  payload: {\n    product,\n    quantity: quantity || 1,\n  },\n});\n\nexport const updateCartQuantity = (product, quantity) => ({\n  type: ActionTypes.CART_UPDATE,\n  payload: { product, quantity },\n});\n\nexport const removeFromCart = (product) => ({\n  type: ActionTypes.CART_REMOVE,\n  payload: product,\n});\n\nexport const clearCart = () => ({\n  type: ActionTypes.CART_CLEAR,\n});\n","import React, { Component } from 'react';\nimport { CFCommerceDataStore } from './data/DataStore';\nimport { Provider } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport { ShopConnector } from './shop/ShopConnector';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={CFCommerceDataStore}>\n        <Router>\n          <Switch>\n            <Route path='/shop' component={ShopConnector} />\n            <Redirect to='/shop' />\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}